{
	"scripts": {
		"lint": "eslint --ext .ts .",
		"build": "tsc && spago bundle-module"
	},
	"dependencies": {
		"firebase-admin": "^10.0.1",
		"firebase-functions": "^3.16.0"
	},
	"devDependencies": {
		"@typescript-eslint/eslint-plugin": "^5.9.1",
		"@typescript-eslint/parser": "^5.9.1",
		"eslint": "^8.6.0",
		"eslint-config-prettier": "^8.3.0",
		"eslint-plugin-prettier": "^4.0.0",
		"prettier": "^2.5.1",
		"purty": "^7.0.0",
		"ts-node": "^10.4.0",
		"typescript": "^4.5.4"
	},
	"eslintConfig": {
		"root": true,
		"env": {
			"es6": true,
			"node": true,
			"browser": true,
			"jest": true
		},
		"parser": "@typescript-eslint/parser",
		"parserOptions": {
			"project": [
				"**/tsconfig.json"
			],
			"sourceType": "module",
			"ecmaVersion": 8,
			"ecmaFeatures": {
				"impliedStrict": true,
				"experimentalObjectRestSpread": true
			},
			"allowImportExportEverywhere": true
		},
		"ignorePatterns": [
			"**/*.js",
			"dist/",
			"node_modules",
			"scripts",
			"examples"
		],
		"overrides": [
			{
				"files": [
					"**/library/*.ts"
				],
				"rules": {}
			},
			{
				"files": [
					"test/**/*.ts"
				],
				"rules": {
					"functional/no-expression-statement": "off"
				}
			}
		],
		"plugins": [
			"@typescript-eslint"
		],
		"extends": [
			"eslint:recommended",
			"plugin:@typescript-eslint/eslint-recommended",
			"plugin:@typescript-eslint/recommended",
			"plugin:@typescript-eslint/recommended-requiring-type-checking",
			"plugin:prettier/recommended",
			"prettier"
		],
		"rules": {
			"@typescript-eslint/no-shadow": "error",
			"@typescript-eslint/no-unused-vars": "off",
			"curly": [
				"error",
				"all"
			],
			"@typescript-eslint/unbound-method": "off",
			"eqeqeq": "error",
			"functional/functional-parameters": "off",
			"max-len": [
				"error",
				{
					"code": 80
				}
			],
			"no-else-return": "error",
			"no-undef-init": "error",
			"no-unsafe-optional-chaining": "error",
			"no-use-before-define": "error",
			"no-useless-rename": "error",
			"no-useless-return": "error",
			"object-shorthand": "error",
			"prefer-arrow-callback": "error",
			"prefer-destructuring": "error",
			"prefer-template": "error",
			"prettier/prettier": [
				"error",
				{
					"singleQuote": true,
					"printWidth": 80
				}
			]
		},
		"settings": {
			"react": {
				"version": "detect"
			}
		}
	}
}
